version: 2.1
orbs:
  sam: circleci/aws-sam-serverless@3.1.0
commands:
  install-kubectl:
    description: install kubectl
    steps:
      - run:
          name: Installing kubectl
          command: |
                  yum install tar gzip -y
                  curl --silent --location -o /usr/local/bin/kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/kubectl
                  chmod +x /usr/local/bin/kubectl
                  mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
                  kubectl version --client
          
                  curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
                  mv /tmp/eksctl /usr/local/bin
                  eksctl version
jobs:
  test-app:
    docker:
      - image: cimg/python:3.10.1
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            pip install -r requirements.txt
      - run:
          name: run tests
          command: |
            python manage.py test
            

  build-and-push-image:
    docker:
      - image: cimg/python:3.10.1
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Build backend image
          command: |
            docker build -t paularinze/django-backend:latest .
            echo $DOCKER_PASSWORD | docker login -u paularinze --password-stdin
            docker push paularinze/django-backend:v1
deploy:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - install-kubectl-and-eksctl
      - run:
          name: Creating K8S cluster
          command: |
                  echo
                  # kubectl get nodes -o wide
                  # kubectl create namespace node-namespace
                  aws eks update-kubeconfig --name Student-App --region us-east-1
      - run:
          name: Deploying version_1
          command: |
              kubectl apply -f deployment.yml
              kubectl apply -f service.yml
      
workflows:
  the_jobs:
    jobs:
      - test-app
      - build-and-push-image:
          requires: [test-app]
      - deploy
          requires: [build-and-push-image]
      #      - bulid-frontend_image
      #      - build-backend-image
      #      - hold-apply
    
    
    
    
  